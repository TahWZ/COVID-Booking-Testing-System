/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.fit3077.project.UI;

import com.fit3077.project.UI.utils.bookingsThread;
import com.fit3077.project.UI.utils.loginManager;
import com.fit3077.project.UI.loginForm;
import com.fit3077.project.UI.setWorkplaceForm;
import com.fit3077.project.UI.QRscanPanel;
import com.fit3077.project.UI.adminBookingPanel;
import com.fit3077.project.UI.assistBookingPanel;
import com.fit3077.project.UI.bookingHistoryPanel;
import com.fit3077.project.UI.onSiteBookingPanel;
import com.fit3077.project.UI.pinVerifyPanel;
import com.fit3077.project.UI.profilePanel;
import com.fit3077.project.UI.searchPanel;
import com.fit3077.project.UI.statusViewerPanel;
import com.fit3077.project.models.user.customer;
import com.fit3077.project.models.user.healthcareWorker;
import com.fit3077.project.models.user.receptionist;
import com.fit3077.project.models.testingSite.testingSite;
import com.fit3077.project.models.user.User;
import com.fit3077.project.models.user.userAPICollection;
import com.fit3077.project.models.user.userCollection;

/**
 * The main interface which manages all the panels shown to the user
 * @author User
 */
public class Home extends javax.swing.JFrame {

    // Constants
    private final static int advDays = 6; //The number of days in advance that a user can book for
    
    // Additional variables
    private Boolean loginState = false;
    private User currentUser;
    private loginManager loginM;
    private testingSite selectedWorkplace; //Workplace location (Requested when receptionist logs in)
    
    // Threads
    private bookingsThread bThread;

    /**
     * Creates new form searchScreen
     */
    public Home() {
        initComponents();
        loginM = new loginManager();
        bThread = new bookingsThread();
        bThread.start();
        workplacePanel.setVisible(false);
        try{
            updateTabs();
        } catch (Exception e){}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        tabbedPane = new javax.swing.JTabbedPane();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        workplacePanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        workplaceField = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setText("COVID Booking & Testing System");

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setText("User:");

        usernameLabel.setText("Guest");
        usernameLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        loginButton.setText("login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(loginButton)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(usernameLabel)
                    .addComponent(loginButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        workplacePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5.setText("Workplace Location:");

        workplaceField.setText("None");
        workplaceField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        javax.swing.GroupLayout workplacePanelLayout = new javax.swing.GroupLayout(workplacePanel);
        workplacePanel.setLayout(workplacePanelLayout);
        workplacePanelLayout.setHorizontalGroup(
            workplacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workplacePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(workplaceField, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        workplacePanelLayout.setVerticalGroup(
            workplacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workplacePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(workplacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(workplaceField)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 20, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(180, 180, 180)
                        .addComponent(workplacePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel3))
                    .addComponent(workplacePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Loads the login screen
     */
    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        // TODO add your handling code here:
        if (loginState){
            logout();
        } else {
            loginForm login = new loginForm(this);
            login.setVisible(true);
        }
    }//GEN-LAST:event_loginButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }
    
    /**
     * login via username
     */
    public void login(String username){
        userCollection uCollection = userAPICollection.getInstance();
        loginState = true;
        currentUser = uCollection.getUserByUserName(username);
        // If user is a receptionist, open additional window for user to enter their current workplace
        if (currentUser instanceof receptionist){
            setWorkplaceForm stsForm = new setWorkplaceForm(this);
            stsForm.setVisible(true);
        } else{
            usernameLabel.setText(username);
            loginButton.setText("logout");
            updateTabs();
        }
    }
    
    /**
     * Sets the current workplace when a receptionist logs in
     */
    public void setWorkplace(testingSite selectedTS){
        this.selectedWorkplace = selectedTS;
        usernameLabel.setText(currentUser.getUsername());
        loginButton.setText("logout");
        updateTabs();
    }
    
    /**
     * log out
     */
    private void logout(){
        loginState = false;
        currentUser = null;
        selectedWorkplace = null;
        loginButton.setText("login");
        usernameLabel.setText("Guest");
        workplacePanel.setVisible(false);
        updateTabs();
    }
    
    /**
     * Updates the tabbed pane to show the appropriate displays based on the user's role
     */
    private void updateTabs(){
        try {
            tabbedPane.removeAll();
            loginM.unsubscribeAll();
            bThread.pauseThread();
            if (loginState){
                if (currentUser instanceof customer){
                    searchPanel sPanel = new searchPanel();
                    tabbedPane.add("Search",sPanel);
                    tabbedPane.add("Booking status", new statusViewerPanel());
                    loginM.subscribe(sPanel);
                    //Added for Assignment 3
                    profilePanel pPanel = new profilePanel(currentUser);
                    tabbedPane.add("Profile", pPanel);
                    bThread.subscribe(pPanel);
                    bThread.resumeThread();
                } 
                if (currentUser instanceof healthcareWorker){
                    pinVerifyPanel pvPanel = new pinVerifyPanel();
                    tabbedPane.add("Verify PIN", pvPanel);
                    loginM.subscribe(pvPanel);
                }
                if (currentUser instanceof receptionist){
                    tabbedPane.add("On-site Booking",new onSiteBookingPanel());
                    tabbedPane.add("QR scan", new QRscanPanel());
                    tabbedPane.add("Booking status", new statusViewerPanel());
                    //Added for Assignment 3
                    tabbedPane.add("Booking assistance", new assistBookingPanel());
                    adminBookingPanel abPanel = new adminBookingPanel(selectedWorkplace);
                    tabbedPane.add("Admin tab", abPanel);
                    bookingHistoryPanel bhPanel = new bookingHistoryPanel(selectedWorkplace);
                    tabbedPane.add("Booking history", bhPanel);


                    bThread.subscribe(abPanel);
                    bThread.subscribe(bhPanel);
                    bThread.resumeThread();
                    workplaceField.setText(selectedWorkplace.getName());
                    workplacePanel.setVisible(true);
                }
                loginM.notify(currentUser);
            } else {
                tabbedPane.add("Search",new searchPanel());
            }
        } catch (Exception e) {}
    }
    
    /**
     * Gets the number of day in advance that a customer can book for
     */
    public static int getAdvDays(){
        return advDays;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton loginButton;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JLabel workplaceField;
    private javax.swing.JPanel workplacePanel;
    // End of variables declaration//GEN-END:variables

}
